{"version":3,"sources":["components/Button/Button.jsx","components/Header/Header.jsx","components/Form/Form.jsx","components/TodoItem/TodoItem.jsx","TodoList/actions.js","TodoList/TodoList.jsx","TodoList/reducer.js","App.js","reportWebVitals.js","store/rootReducer.js","store/store.js","index.js"],"names":["Button","children","onClick","type","color","resProps","StyledButton","customType","styled","button","props","Header","StyledNavLink","style","activeStyle","to","NavLink","Form","onSubmit","useState","imputValue","setImputValue","onSubmitHandler","useCallback","evt","preventDefault","onChange","target","value","StyledForm","htmlFor","Input","id","input","form","TodoItem","title","isCompleted","onChangeCompletionStatus","onDelete","onCompletionButtonClick","onDeleteClick","Container","Title","StyledInner","StyledButon","div","span","ADD_TODO","DELETE_TODO","CHANGE_TODO_COMPLETION_STATUS","CHANGE_CURRENT_PAGE","TodoList","dispatch","useDispatch","currentPage","useSelector","state","todoList","todos","pathname","useLocation","addTodo","inputValue","payload","toggleCompletion","todoId","changeTodoCompletionStatus","deleteTodo","deleteTodoActions","setCurrentPage","nextPage","changeCurrentPage","filteredTodos","filter","todo","includes","isNoTodos","length","emptyText","useMemo","onButtonClick","page","map","initialState","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","rootReduser","combineReducers","action","String","Math","random","store","createStore","composeWithDevTools","applyMiddleware","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.00404172.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nexport function Button({\n  children,\n  onClick,\n  type = \"solid\",\n  color = \"#24292E\",\n  ...resProps\n}) {\n  return (\n    <StyledButton onClick={onClick} customType={type} color={color} {...resProps}>\n      {children}\n    </StyledButton>\n  );\n}\n \nconst StyledButton = styled.button`\n  padding: 9px 15px;\n  border-radius: 5px;\n  font-size: 16px;\n  cursor: pointer;\n  border: none;\n  outline: none;\n  color: white;\n  background-color: transparent;\n\n  &:hover {\n    opacity: 0.5;\n  }\n  ${(props) =>\n    props.customType === \"solid\"\n      ? `\n    background-color: ${props.color};\n    ` : `\n    color ${props.color}\n  `}\n`;","\nimport React from \"react\";\nimport styled from \"styled-components\";\nimport { NavLink } from 'react-router-dom';\n\nexport function Header() {\n  return (\n    <header>\n      <StyledNavLink style={{color: \"deepskyblue\"}} activeStyle={{ color: \"#28A745\" }} to=\"/all\">All</StyledNavLink>\n      <StyledNavLink style={{color: \"deepskyblue\"}} activeStyle={{ color: \"#28A745\" }} to=\"/active\">Active</StyledNavLink>\n      <StyledNavLink style={{color: \"deepskyblue\"}} activeStyle={{ color: \"#28A745\" }} to=\"/done\">Done</StyledNavLink>\n    </header>\n  );\n}\n\nconst StyledNavLink = styled(NavLink)`\n  margin: 20px;\n  text-decoration: none;\n`","import React, { useCallback, useState } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"../Button\";\n\nexport function Form({ onSubmit }) {\n  const [imputValue, setImputValue] = useState(\"\");\n\n  const onSubmitHandler = useCallback(\n    (evt) => {\n      evt.preventDefault();\n      onSubmit(imputValue);\n      setImputValue(\"\");\n    },\n    [onSubmit, imputValue]\n  );\n\n  const onChange = useCallback((evt) => setImputValue(evt.target.value), [setImputValue]);\n\n  return (\n    <StyledForm onSubmit={onSubmitHandler}>\n      <label htmlFor=\"todoInput\">\n        Add a todo for today\n        <Input value={imputValue} onChange={onChange} id=\"todoInput\" />\n      </label>\n      <Button>Add</Button>\n    </StyledForm>\n  );\n}\n\nconst Input = styled.input`\n  width: 200px;\n  margin: 0 30px;\n  padding: 7px 10px;\n  border: 1px solid #eaebec;\n  border-radius: 5px;\n  outline: none;\n`;\n\nconst StyledForm = styled.form`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 20px 0 30px;\n`;","  import React, { useCallback } from \"react\";\nimport styled from \"styled-components\";\nimport { Button } from \"../Button\";\n\nexport function TodoItem({ title, isCompleted, id, onChangeCompletionStatus, onDelete}) {\n  \n  const onCompletionButtonClick = useCallback(() => {\n    onChangeCompletionStatus(id);\n  }, [id, onChangeCompletionStatus]);\n\n  const onDeleteClick = useCallback(() => {\n    onDelete(id)\n  }, [id, onDelete])\n\n  return (\n    <Container isCompleted={isCompleted}>\n      <Title>{title}</Title>\n      <StyledInner>\n        <StyledButon onClick={onCompletionButtonClick} color={isCompleted ? \"#FCC10B\" : \"#28A745\"}>\n          {isCompleted ? \"Undo\" : \"Done\"}\n        </StyledButon>\n        <StyledButon onClick={onDeleteClick} color=\"#DB3646\">Delete</StyledButon>\n      </StyledInner>\n    </Container>\n  );\n}\n\nconst StyledButon = styled(Button)`\n  margin-left: 10px;\n`;\n\nconst StyledInner = styled.div`\n  min-width: 165px;\n`;\n\nconst Title = styled.span`\n  margin: 0 10px;\n`;\n\nconst Container = styled.div`\n  min-width: 490px;\n  max-width: 700px;\n  border: 1px solid #eaebec;\n  border-radius: 5px;\n  margin-bottom: 10px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  background-color: ${({isCompleted}) => isCompleted ? '#C3E5CA' : 'white'}\n`;","export const ADD_TODO = 'ADD_TODO';\nexport const DELETE_TODO = 'DELETE_TODO';\nexport const CHANGE_TODO_COMPLETION_STATUS = 'CHANGE_TODO_COMPLETION_STATUS';\nexport const CHANGE_CURRENT_PAGE = 'CHANGE_CURRENT_PAGE';\n\nexport function addTodoActions(text) {\n  return {\n    type: ADD_TODO,\n    payload: text,\n  };\n}\n\nexport function deleteTodoActions(todoId) {\n  return {\n    type: DELETE_TODO,\n    payload: todoId,\n  };\n}\n\nexport function changeTodoCompletionStatus(todoId) {\n  return {\n    type: CHANGE_TODO_COMPLETION_STATUS,\n    payload: todoId,\n  };\n}\n\nexport function changeCurrentPage(nextPage) {\n  return {\n    type: CHANGE_CURRENT_PAGE,\n    payload: nextPage,\n  };\n}","import React, { useCallback, useMemo } from \"react\";\nimport styled from \"styled-components\";\nimport { Header, Form, TodoItem } from \"../components\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { addTodoActions, changeTodoCompletionStatus, deleteTodoActions, changeCurrentPage } from \"./actions\";\nimport { useLocation } from \"react-router-dom\"\n\n\nexport function TodoList() {\n  const dispatch = useDispatch();\n\n  const currentPage = useSelector((state) => state.todoList.currentPage);\n  const todos = useSelector((state) => state.todoList.todos);\n\n  const { pathname } = useLocation();\n\n  const addTodo = useCallback((inputValue) => {\n    dispatch(addTodoActions(inputValue));\n  }, [dispatch]);\n\n  const toggleCompletion = useCallback((todoId) => {\n    dispatch(changeTodoCompletionStatus(todoId));\n  }, [dispatch])\n\n  const deleteTodo = useCallback((todoId) => {\n    dispatch(deleteTodoActions(todoId));\n  }, [dispatch])\n\n  const setCurrentPage = useCallback(( nextPage ) => {\n    dispatch(changeCurrentPage(nextPage));\n  }, [dispatch])\n\n  const filteredTodos = todos.filter((todo) => {\n    if (pathname.includes(\"active\")) {\n      return todo.isCompleted === false;\n    }\n\n    if (pathname.includes(\"done\")) {\n      return todo.isCompleted === true;\n    }\n\n    return true;\n  });\n\n  const isNoTodos = filteredTodos.length === 0;\n\n  const emptyText = useMemo(() => {\n    if (pathname.includes(\"all\") || pathname.includes(\"active\")) {\n      return \"Keep calm. There are no todos for today\";\n    }\n    return \"You haven't done anything yet \";\n  }, [pathname]);\n\n  return (\n    <Container>\n      <Header onButtonClick={setCurrentPage} page={currentPage} />\n      <Form onSubmit={addTodo} />\n      {\n        isNoTodos ? (\n          <span>{emptyText}</span>\n        ) : (\n          filteredTodos.map((todo) => (\n            <TodoItem\n              onChangeCompletionStatus={toggleCompletion}\n              onDelete={deleteTodo}\n              page={currentPage}\n              title={todo.title}\n              id={todo.id}\n              isCompleted={todo.isCompleted}\n            />\n          ))\n        )\n      }\n\n    </Container>\n  );\n}\n\nconst Container = styled.div`\n  text-align: center;\n  margin: 20px auto;\n  max-width: 700px;\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`","import {\n  ADD_TODO,\n  DELETE_TODO,\n  CHANGE_TODO_COMPLETION_STATUS,\n  CHANGE_CURRENT_PAGE,\n} from \"./actions\";\n\nconst initialState = {\n  currentPage: \"all\",\n  todos: [],\n};\n\nexport function todoListReducer(state = initialState, action) {\n  switch (action.type) {\n    case CHANGE_CURRENT_PAGE: {\n      return {\n        ...state,\n        currentPage: action.payload,\n      };\n    }\n\n    case ADD_TODO: {\n      return {\n        ...state,\n        todos: [\n          ...state.todos,\n          {\n            title: action.payload,\n            isCompleted: false,\n            id: String(Math.random()),\n          },\n        ],\n      };\n    }\n\n    case DELETE_TODO: {\n      return {\n        ...state,\n        todos: state.todos.filter((todo) => todo.id !== action.payload),\n      };\n    }\n\n    case CHANGE_TODO_COMPLETION_STATUS: {\n      return {\n        ...state,\n        todos: state.todos.map((todo) => {\n          if (todo.id === action.payload) {\n            return {\n              ...todo,\n              isCompleted: !todo.isCompleted,\n            };\n          }\n          return todo;\n        }),\n      };\n    }\n\n    default:\n      return state;\n  }\n}","import React from \"react\";\nimport { TodoList } from \"./TodoList\";\n\nfunction App() {\n  return <TodoList />;\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { combineReducers } from \"redux\";\nimport { todoListReducer } from \"../TodoList\";\n\nexport const rootReduser = combineReducers({ todoList: todoListReducer });","import { createStore, applyMiddleware } from \"redux\";\nimport { rootReduser } from \"./rootReducer\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\n\nexport const store = createStore(\n  rootReduser,\n  composeWithDevTools(\n    applyMiddleware()\n    // other store enhancers if any\n  )\n);","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from \"react-redux\";\nimport { store } from \"./store\";\nimport { BrowserRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <Provider store={store }>\n    <BrowserRouter>\n      <React.StrictMode>\n        <App />\n      </React.StrictMode>\n    </BrowserRouter>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}